#!/bin/bash -ex

function require_user {
	uid=`getent passwd camlistore | cut -d ":" -f 3`
	home=`getent passwd camlistore | cut -d ":" -f 6`

	# if there is the uid the account is there and we can do
	# the sanit(ar)y checks otherwise we can safely create it.

	if [ "$uid" ]; then
		# guess??? the checks!!!
		if [ $uid -ge 100 ] && [ $uid -le 999 ]; then
			echo "camlistore uid check: ok"
		else
			echo "ERROR: camlistore account has a non-system uid!"
			exit 1
		fi
		if [ "$home" = "/var/lib/camlistore" ]; then
			echo "camlistore homedir check: ok"
		else
			echo "ERROR: camlistore account has an invalid home directory!"
		exit 1
		fi
	else
		# what this might mean?? oh creating a system l^Huser!
		adduser --quiet \
				--system \
				--disabled-password \
				--home /var/lib/camlistore \
				--shell /bin/bash \
				--group \
			camlistore
	fi
}

function install_golang {
	SERIES=$(lsb_release -c -s)
	if [ "$SERIES" = "precise" ]; then
		apt-get install -y python-software-properties
		apt-add-repository -y ppa:juju/golang
		apt-get update -y
	fi
	apt-get install -y golang-go
}

require_user
install_golang

apt-get install -y libsqlite3-dev unzip

wget https://github.com/bradfitz/camlistore/archive/0.7.zip -O camlistore.zip
unzip camlistore.zip
(cd camlistore-0.7/; go run make.go)

for f in camget camlistored cammount camput camtool; do
	install -m 0755 camlistore-0.7/bin/$f /usr/bin
done
install -m 0644 files/camlistore.conf /etc/init

service camlistore start

